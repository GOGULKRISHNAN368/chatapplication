{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: `${API_URL}/api`\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  register: data => api.post('/auth/register', data),\n  login: data => api.post('/auth/login', data)\n};\nexport const userAPI = {\n  searchByUniqueId: uniqueId => api.get(`/users/search/${uniqueId}`),\n  getContacts: () => api.get('/users/contacts'),\n  addContact: uniqueId => api.post('/users/contacts', {\n    uniqueId\n  })\n};\nexport const messageAPI = {\n  getMessages: userId => api.get(`/messages/${userId}`),\n  getGroupMessages: groupId => api.get(`/messages/group/${groupId}`),\n  searchMessages: query => api.get(`/messages/search/${query}`)\n};\nexport const groupAPI = {\n  createGroup: data => api.post('/groups', data),\n  getGroups: () => api.get('/groups')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authAPI","register","data","post","login","userAPI","searchByUniqueId","uniqueId","get","getContacts","addContact","messageAPI","getMessages","userId","getGroupMessages","groupId","searchMessages","query","groupAPI","createGroup","getGroups"],"sources":["C:/Users/Gogul/OneDrive/Desktop/chat-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nconst api = axios.create({\r\n  baseURL: `${API_URL}/api`\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authAPI = {\r\n  register: (data) => api.post('/auth/register', data),\r\n  login: (data) => api.post('/auth/login', data)\r\n};\r\n\r\nexport const userAPI = {\r\n  searchByUniqueId: (uniqueId) => api.get(`/users/search/${uniqueId}`),\r\n  getContacts: () => api.get('/users/contacts'),\r\n  addContact: (uniqueId) => api.post('/users/contacts', { uniqueId })\r\n};\r\n\r\nexport const messageAPI = {\r\n  getMessages: (userId) => api.get(`/messages/${userId}`),\r\n  getGroupMessages: (groupId) => api.get(`/messages/group/${groupId}`),\r\n  searchMessages: (query) => api.get(`/messages/search/${query}`)\r\n};\r\n\r\nexport const groupAPI = {\r\n  createGroup: (data) => api.post('/groups', data),\r\n  getGroups: () => api.get('/groups')\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,OAAO;AACrB,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,OAAO,GAAG;EACrBC,QAAQ,EAAGC,IAAI,IAAKd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;EACpDE,KAAK,EAAGF,IAAI,IAAKd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAED,IAAI;AAC/C,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG;EACrBC,gBAAgB,EAAGC,QAAQ,IAAKnB,GAAG,CAACoB,GAAG,CAAC,iBAAiBD,QAAQ,EAAE,CAAC;EACpEE,WAAW,EAAEA,CAAA,KAAMrB,GAAG,CAACoB,GAAG,CAAC,iBAAiB,CAAC;EAC7CE,UAAU,EAAGH,QAAQ,IAAKnB,GAAG,CAACe,IAAI,CAAC,iBAAiB,EAAE;IAAEI;EAAS,CAAC;AACpE,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG;EACxBC,WAAW,EAAGC,MAAM,IAAKzB,GAAG,CAACoB,GAAG,CAAC,aAAaK,MAAM,EAAE,CAAC;EACvDC,gBAAgB,EAAGC,OAAO,IAAK3B,GAAG,CAACoB,GAAG,CAAC,mBAAmBO,OAAO,EAAE,CAAC;EACpEC,cAAc,EAAGC,KAAK,IAAK7B,GAAG,CAACoB,GAAG,CAAC,oBAAoBS,KAAK,EAAE;AAChE,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG;EACtBC,WAAW,EAAGjB,IAAI,IAAKd,GAAG,CAACe,IAAI,CAAC,SAAS,EAAED,IAAI,CAAC;EAChDkB,SAAS,EAAEA,CAAA,KAAMhC,GAAG,CAACoB,GAAG,CAAC,SAAS;AACpC,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}